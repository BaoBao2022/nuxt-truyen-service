import mongoose from 'mongoose';

const ComicDrawlSchema = new mongoose.Schema({
    _id: { type: String, required: true },
    type: { type: String, required: false },
    title: { type: String, required: false },
    comicName: { type: String, required: false },
    comicNameMention: { type: String, required: false },
    categories: [],
    active: { type: Boolean, required: false },
    slug: { type: String, required: false },
    label: { type: String, required: false },
    platform: [],
    authors: [],
    chapCount: { type: Number, required: false },
    newestChapter: { type: String, required: false },
    averageRate: { type: Number, required: false },
    avgRate: { type: Number, required: false },
    reviewCount: { type: Number, required: false },
    followingCount: { type: Number, required: false },
    likedCount: { type: Number, required: false },
    viewCount: { type: Number, required: false },
    shareCount: { type: Number, required: false },
    adultContent: { type: Boolean, required: false },
    licenseAvailable: { type: Boolean, required: false },
    horizontalLogo: { type: String, required: false },
    verticalLogo: { type: String, required: false },
    verticalCover: { type: String, required: false },
    ogImage: { type: String, required: false },
    squareLogo: { type: String, required: false },
    squareCover: { type: String, required: false },
    publishedAt: { type: String, required: false },
    // isNew: Boolean,
    updatedAt: { type: String, required: false },
    createdAt: { type: String, required: false },
    status: { type: String, required: false },
    totalVote: { type: String, required: false },
    totalComment: { type: String, required: false },
    source: { type: String, required: false },
    tags: [],
    commentsData: [],
    comicsRelated: [],
    community: {},
    totalUserDonatePoint: { type: Number, required: false },
    points: {},
    unlockComic: {},
    unlockChapter: {},
});

export default mongoose.model("comic-draws", ComicDrawlSchema);

